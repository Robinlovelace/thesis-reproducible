{
    "contents" : "# england.R - loads english commuting data and plots it\n# (run before netherlands.R and nl-en-compare.R for comparison of energy costs)\nsetwd(\"~/Dropbox/Thesis/Reproducible/esubnat/\")\nx = c(\"ggplot2\", \"sp\", \"rgeos\", \"mapproj\", \"rgdal\", \"maptools\")\nlapply(x, require, character.only=T) # the R packages we'll be using\n\nsetwd(\"~/Data/Nationaltravel/ST121-STwards/\")\nwards <-  readOGR(\".\", layer=\"wardsst121uk\" )\nobject.size(wards)/1000000 # woa - 300 MB - too large\nwards@data <- wards@data[,c(1:102)]\nobject.size(wards)/1000000 # woa - still too large\nwards <- SpatialPolygonsDataFrame(Sr= gSimplify(wards, tol=2000, topologyPreserve=T), data= wards@data)\n### nb: use large tol=values (e.g. 2000) for plotting all England; smaller (e.g. 500 for regions)\nobject.size(wards)/1000000 # \nplot(wards[wards$ZONE_CODE==\"00AAFA\" ,], col=\"red\")\nplot(wards[grepl(\"00A\", wards$ZONE_CODE) ,], col=\"red\")\n\n# bbox(wards)\n# bbox(o)\n# plot(wards[grepl(\"00\", wards$ZONE_CODE) ,], col=\"red\", xlim=matrix(c(300,200,400,400), 2,2))\n\n?sp:::plot.SpatialPolygons \nhead(wards@data[,1:10])\ngrepl(\"00AAF\", wards$ZONE_CODE)\nnames(wards)\n\nsetwd(\"~/Dropbox/Thesis/Reproducible/esubnat/\")\nwards@data[1:10,1:5] # take a look at the first 5 columns of data: integer counts\nwards$abbed <- abbreviate(wards$ZONE_LABEL, minlength=2) # create abbreviated area names\nwards@data[1:5,c(\"ZONE_LABEL\", \"abbed\")] # check the abbreviation worked\n# plot(bbox(wards)) # not working - should know...\n# text(coordinates(wards), labels=wards$abbed, col=\"red\") # add our region names: in the right place?\n\ndbreaks <- c(2,5,10,20,30,40,60)\ndbreaks2 <- c(\"all\", 0, dbreaks)\n# Correct labels for the data...\n# Other than 002 it's an 11 by 9 matrix\nmodenames <- c(\"all\", \"metro\", \"train\", \"bus\", \"moto\", \"car\", \"carp\", \"taxi\", \"bike\", \"walk\", \"other\")\ndbreaks <- c(2,5,10,20,30,40,60) # these are the distance breaks in the data\ndbreaks2 <- c(\"all\", 0, dbreaks) # correct labels to use with our data\nnewnames <- paste(rep(modenames, times=9), rep(dbreaks2, each=11), sep=\".\")\nwards@data$mfh <- wards@data$ST1210002 #\nwards@data <- wards@data[,-4] # remove the original mainly working from home column: gets in the way\nnames(wards@data)[3:101] <- newnames\n# ecosts <- read.csv(\"~/Dropbox/Thesis/Tables/final-e-justpres.csv\") # just reformat\necosts <- c(0,0.57,0.77,2.1,1.7,3,0,3,0.09,0.13,0) # these are the direct energy costs (MJ/KM) for each mode\nnames(ecosts) <- c(\"All\", \"Tram\", \"Train\", \"Bus\", \"Moto\", \"Car.d\", \"Car.p\", \"Taxi\", \"Cycle\", \"Walk\", \"Other\")\n\nmd <- read.csv(\"~/Dropbox/Thesis/Reproducible/energy-nat/dbxs.csv\", header=T, ) # the distances associated with each distance bin\nplot(rep(c(0,0,1,3.5,7.5,15,25,35,50,100),11), t(md)) # visualise them: make sense?\n\nmdv <- as.vector(as.matrix(md[,2:10])) # rearange the distances data\nedcosts <- rep(ecosts, 9) * mdv # multiply the energy costs by average distances fo each of 9 modes\nnames(edcosts) <- newnames\nwards@data$other.60 <- 0\necs <- sweep(x=wards@data[,3:101], MARGIN=2, edcosts, '*' ) \nbarplot(colSums((ecs)[seq(6,by=11,length.out=9)]))\n\npaste(names(ecs),\"en\", sep=\".\")\nnames(ecs) <- paste(\"moden\",names(ecs), sep=\".\")\nnames(ecs)\nwards@data <- cbind(wards@data, ecs)\nwards@data$ET <- rowSums(ecs)\nwards@data$EAV <- wards$ET / wards$all.all\nplot(wards[grepl(\"00A\", wards$ZONE_CODE),], col = rowSums(ecs))\nnames(wards@data)\nrange(wards@data$EAV)\nsummary(wards@data$EAV)\nsave(wards, file=\"wards.RData\")\n\n# Geographically subsetting\nlibrary(raster)\nclip.extent <- as(extent(300000, 400000, 300000, 500000), \"SpatialPolygons\")\nrm(clip.extent)\nclip.extent2 # another way?\nproj4string(clip.extent) <- proj4string(wards)\ngI <- gIntersects(wards, clip.extent, byid=T  )\nla.hfd <- wards[which(gI),]\nplot(la.hfd)\n\n# convert to ggplot2, just for plotting\nla <- fortify(wards, region=\"ZONE_LABEL\")\nhead(la)\nobject.size(la)\nhead(la)\n# save(la,file=\"la.RData\")\nload(\"la.RData\")\nload(\"wards.RData\")\ngortex <- coordinates(wards)/1000 \ngortex <- as.data.frame(cbind(gortex))\ngortex$V3 <- as.character(abbreviate(wards$ZONE_LABEL))\nhead(gortex)\n\nobject.size(la.all)/10^6\nla.all$ <- la\nla <- la.all[1:10000,  ]\n\np <- ggplot(data=la, aes( x=long/1000, y=lat/1000))\np + geom_polygon(data=la,aes(x=long/1000, y=lat/1000, fill=ET/all.all, group=group)) + \n  scale_fill_continuous(low=\"green\", high=\"red\", name=\"Etrp (MJ)\",\n                        limits=c(10,80)) + coord_fixed() +\n  xlab(\"Easting (km)\") + ylab(\"Northing (km)\") \n\n# now by mode...\nggsave(\"~/Dropbox/Thesis/Figures/goren.png\", scale=1, width= 5.5, height=5.5)\n\nsummary(la) \n  la$all.all\n# Load-in distance boxes\nmdis <- read.csv(\"~/1PhD/Core data/dboxes.csv\", header=T)\nhead(mdis)\nmdis <- mdis[-1,]\nmdis$mode <- row.names(mdis)\nmdis <- melt(mdis)\nmdis$b.max <- rep(c(dbreaks, 250), each=10)\nmdis$b.min <- rep(c(0,dbreaks), each=10)\nhead(mdis)\nmdis$Avd <- mdis$value/mdis$b.max\nqplot(data=mdis, x=b.min, y=Avd, geom=\"line\", colour=mode) # OK but too many modes...\nmdis$avbox <- (mdis$b.max + mdis$b.min)/2\nmdis$value <- mdis$value *1.4\nmdis$avbox[mdis$avbox> 60] <- 70\nqplot(data = mdis[which(mdis$mode %in% c(\"bus\", \"card\", \"cycle\", \n            \"train\", \"walk\")),], x=avbox, y=value, geom=\"line\", colour=mode) + \n  xlab(\"Euclidean distance bin average (km)\") +\n  ylab(\"Average route distance (km)\") +\n  xlim(c(0,70))+ scale_x_continuous(breaks = c(0,2,5,10,20,30,40,60)) \nggsave(\"~/Dropbox/Thesis/Figures/big-route-dis.png\")\n",
    "created" : 1376586667116.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "185656037",
    "id" : "811FCD1A",
    "lastKnownWriteTime" : 1374746987,
    "path" : "~/Dropbox/Thesis/Reproducible/esubnat/england-wards.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}