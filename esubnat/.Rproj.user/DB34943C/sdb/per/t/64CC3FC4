{
    "contents" : "# dismap\nx = c(\"ggplot2\", \"sp\", \"rgeos\", \"mapproj\", \"rgdal\", \"maptools\")\nlapply(x, require, character.only=T) # the R packages we'll be using\nsearch()\n\ndiss <- readOGR(\"/home/robin/Data/Nationaltravel/dislas/\", \"districts121\")\ns1 <- object.size(diss) # 50 MB for only 308 polygons\ndiss <- SpatialPolygonsDataFrame(Sr= gSimplify(diss, tol=500, topologyPreserve=T), data= diss@data)\nobject.size(diss)/s1 # shrunk to only 8% of it's original size!\nplot(diss) # much faster\ndis <- diss # save orginal to repeat original code\n\ndiss <- readOGR(\"/home/robin/Data/Nationaltravel/dislas/\", \"dismode_la_eng\")\ns1 <- object.size(diss) # 50 MB for only 308 polygons\ndiss <- SpatialPolygonsDataFrame(Sr= gSimplify(diss, tol=500, topologyPreserve=T), data= diss@data)\nobject.size(diss)/s1 # shrunk to only 8% of it's original size!\nplot(diss) # much faster\n\nrow.names(diss) <- as.character(1001:1046)\nspChFIDs(diss, x=as.character(1000:nrow(diss@data)+1000))\nd <- spRbind(diss, dis)\nplot(d)\n# plot(gUnion(diss, dis, byid=T))\n# d <- gUnion(diss, dis) # these failed\ndiss <- d\nobject.size(diss) # Mb: awesome\nrm(d,dis)\n\ndbreaks <- c(2,5,10,20,30,40,60)\ndbreaks2 <- c(\"all\", 0, dbreaks)\nmodenames <- c(\"all\", \"metro\", \"train\", \"bus\", \"moto\", \"car\", \"carp\", \"taxi\", \"bike\", \"walk\", \"other\")\ndbreaks <- c(2,5,10,20,30,40,60) # these are the distance breaks in the data\ndbreaks2 <- c(\"all\", 0, dbreaks) # correct labels to use with our data\nnewnames <- paste(rep(modenames, times=9), rep(dbreaks2, each=11), sep=\".\")\ndiss@data$mfh <- diss@data$ST1210002 #\ndiss@data <- diss@data[,-4] # remove the original mainly working from home column: gets in the way\nnames(diss@data)[3:101] <- newnames\n\necosts <- c(0,0.57,0.77,2.1,1.7,3,0,3,0.09,0.13,0) # these are the direct energy costs (MJ/KM) for each mode\nnames(ecosts) <- c(\"All\", \"Tram\", \"Train\", \"Bus\", \"Moto\", \"Car.d\", \"Car.p\", \"Taxi\", \"Cycle\", \"Walk\", \"Other\")\n\nmd <- read.csv(\"~/Dropbox/Thesis/Reproducible/energy-nat/dbxs.csv\", header=T, ) # the distances\nmdv <- as.vector(as.matrix(md[,2:10])) # rearange the distances data\nedcosts <- rep(ecosts, 9) * mdv # multiply the energy costs by average distances fo each of 9 modes\nnames(edcosts) <- newnames\n# diss@data$other.60 <- 0\necs <- sweep(x=diss@data[,3:101], MARGIN=2, edcosts, '*' ) \nbarplot(colSums((ecs)[seq(6,by=11,length.out=9)]))\npaste(names(ecs),\"en\", sep=\".\")\nnames(ecs) <- paste(\"moden\",names(ecs), sep=\".\")\nnames(ecs)\ndiss@data <- cbind(diss@data, ecs)\ndiss@data$ET <- rowSums(ecs)\ndiss@data$EAV <- diss$ET / diss$all.all\ndiss$abbed <- abbreviate(diss$ZONE_LABEL, minlength=2) # create abbreviated area names\ndiss$id <- 1:nrow(diss@data)\n\nla <- fortify(diss, region=\"id\")\nla <- join(la, diss@data, by=\"id\", match=\"first\")\nhead(la)\n\nobject.size(la)/1000000\nnames(la) # 33 Mb for 400 tol\np <- ggplot(data=la, aes( x=long/1000, y=lat/1000))\np + geom_polygon(data=la,aes(x=long/1000, y=lat/1000, fill=ET/all.all, group=group)) + \n  scale_fill_continuous(low=\"green\", high=\"red\", name=\"Etrp (MJ)\") + coord_fixed() +\n  xlab(\"Easting (km)\") + ylab(\"Northing (km)\") + \n  geom_path(data=fgor, aes(x=long/1000, y=lat/1000, group=group)) + theme_classic()\nggsave(\"~/Dropbox/Thesis/Figures/districten.png\", width=8, height = 8)\ndiss@data[diss$EAV <25,c(\"ZONE_LABEL\", \"EAV\")]\ndiss@data[diss$EAV >54,c(\"ZONE_LABEL\", \"EAV\")]\nsd(diss@data$EAV)\nsd(gors@data$ET/gors$all.all)\n\nogrDrivers()\nwriteOGR(wards, dsn=\".\", layer=\"wardens\", driver=\"ESRI Shapefile\")\nwriteOGR(diss, dsn=\".\", layer=\"districtens\", driver=\"ESRI Shapefile\")\n\n",
    "created" : 1376586256183.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2859352704",
    "id" : "64CC3FC4",
    "lastKnownWriteTime" : 1376638547,
    "path" : "~/Dropbox/Thesis/Reproducible/esubnat/districten.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}