{
    "contents" : "# # dismap\n# x = c(\"ggplot2\", \"sp\", \"rgeos\", \"mapproj\", \"rgdal\", \"maptools\")\n# lapply(x, require, character.only=T) # the R packages we'll be using\n# search()\n# \n# diss <- readOGR(\"/home/robin/Data/Nationaltravel/dislas/\", \"districts121\")\n# s1 <- object.size(diss) # 50 MB for only 308 polygons\n# diss <- SpatialPolygonsDataFrame(Sr= gSimplify(diss, tol=500, topologyPreserve=T), data= diss@data)\n# object.size(diss)/s1 # shrunk to only 8% of it's original size!\n# plot(diss) # much faster\n# dis <- diss # save orginal to repeat original code\n# \n# diss <- readOGR(\"/home/robin/Data/Nationaltravel/dislas/\", \"dismode_la_eng\")\n# s1 <- object.size(diss) # 50 MB for only 308 polygons\n# diss <- SpatialPolygonsDataFrame(Sr= gSimplify(diss, tol=500, topologyPreserve=T), data= diss@data)\n# object.size(diss)/s1 # shrunk to only 8% of it's original size!\n# plot(diss) # much faster\n# \n# row.names(diss) <- as.character(1001:1046)\n# spChFIDs(diss, x=as.character(1000:nrow(diss@data)+1000))\n# d <- spRbind(diss, dis)\n# plot(d)\n# # plot(gUnion(diss, dis, byid=T))\n# # d <- gUnion(diss, dis) # these failed\n# diss <- d\n# object.size(diss) # Mb: awesome\n# rm(d,dis)\n# \n# dbreaks <- c(2,5,10,20,30,40,60)\n# dbreaks2 <- c(\"all\", 0, dbreaks)\n# modenames <- c(\"all\", \"metro\", \"train\", \"bus\", \"moto\", \"car\", \"carp\", \"taxi\", \"bike\", \"walk\", \"other\")\n# dbreaks <- c(2,5,10,20,30,40,60) # these are the distance breaks in the data\n# dbreaks2 <- c(\"all\", 0, dbreaks) # correct labels to use with our data\n# newnames <- paste(rep(modenames, times=9), rep(dbreaks2, each=11), sep=\".\")\n# diss@data$mfh <- diss@data$ST1210002 #\n# diss@data <- diss@data[,-4] # remove the original mainly working from home column: gets in the way\n# names(diss@data)[3:101] <- newnames\n# \n# ecosts <- c(0,0.57,0.77,2.1,1.7,3,0,3,0.09,0.13,0) # these are the direct energy costs (MJ/KM) for each mode\n# names(ecosts) <- c(\"All\", \"Tram\", \"Train\", \"Bus\", \"Moto\", \"Car.d\", \"Car.p\", \"Taxi\", \"Cycle\", \"Walk\", \"Other\")\n# \n# md <- read.csv(\"~/Dropbox/Thesis/Reproducible/energy-nat/dbxs.csv\", header=T, ) # the distances\n# mdv <- as.vector(as.matrix(md[,2:10])) # rearange the distances data\n# edcosts <- rep(ecosts, 9) * mdv # multiply the energy costs by average distances for each of 9 modes\n# names(edcosts) <- newnames\n# # diss@data$other.60 <- 0\n# ecs <- sweep(x=diss@data[,3:101], MARGIN=2, edcosts, '*' ) \n# barplot(colSums((ecs)[seq(6,by=11,length.out=9)]))\n# paste(names(ecs),\"en\", sep=\".\")\n# names(ecs) <- paste(\"moden\",names(ecs), sep=\".\")\n# names(ecs)\n# diss@data <- cbind(diss@data, ecs)\n# diss@data$ET <- rowSums(ecs)\n# diss@data$EAV <- diss$ET / diss$all.all\n# diss$abbed <- abbreviate(diss$ZONE_LABEL, minlength=2) # create abbreviated area names\n# diss$id <- 1:nrow(diss@data)\n\nhead(ecs[13:15])\nnames(ecs)[12:22] # 11 modes of transport including 'all'\neyr <- c( 7.2,\n          7.6,\n          7.4,\n          7.3,\n          7.0,\n          6.9,\n          6.5,\n          4.3)\neyr <- rep(c(0,eyr), times=1, each=11)\nlength(ecs)\ncbind(names(ecs), eyr) # changes in frequency match changes in dist.\neyr <- eyr * 44 # Number of trips/yr\nsummary(eyr)\nnames(diss@data)[101:(100+99)]\neyr <- sweep(diss@data[101:(100+99)], MARGIN=2, eyr, '*')\nhead(eyr[,12:18])\nETyr <- rowSums(eyr) / diss$all.all\nsummary(ETyr / (365*3.6)) # energy costs/person/yr (kWh)\n\n# load pops\nlist.files()\npops <- read.csv(\"pops-la.csv\")\nsummary(pops[,c(3,5)])\npops$ZONE_CODE <- pops$Code\nnames(diss@data)\npops <- join(diss@data[c(\"ZONE_CODE\", \"all.all\")], pops[c(\"ZONE_CODE\", \"All.ages\")], )\nhead(pops)\npops$All.ages <- as.numeric(as.character(pops$All.ages))\npops$All.ages <- pops$All.ages * 1000\nsummary(pops$all.all/ pops$All.ages)\ndiss$ETyr <- ETyr\ndiss$ETyr.tot <- rowSums(eyr)\ndiss$kWhcommuterd <- ETyr / (365*3.6)\ndiss$kWhpd <- diss$kWhcommuterd * (pops$all.all/ pops$All.ages) # Average kWh/p/d\nsummary(diss$kWhpd )\n\n\ndiss@data[which(grepl(\"Barn\",diss$ZONE_LABEL)),1:10]\n### Comparison with total energy at LA level\ntoten <- read.csv(\"totenergy-la.csv\")\nhead(toten[,2:6])\ntoten[which(grepl(\"Birming\", toten$X)),] # definitely works...\ntoten$ZONE_LABEL <- toten[,2]\nsummary(toten[which(toten$ZONE_LABEL %in% diss$ZONE_LABEL),1:5]) # Yes! good match\ntoten <- join(diss@data[1:2], toten)\ntoten[which(grepl(\"Birming\", toten$ZONE_LABEL)),] # test - works\nnrow(toten) ; nrow(diss)\ntoten$Total.final.energy.consumption.at.regional.and.local.authority.level..2003.in.GWh..experimental. <- NULL\nhead(toten[1:5])\nsummary(toten[1:5]) # All factors\ntoten[1:5,1:5]\nas.character(toten[1:5,5]) # it works\n# toten[3:32] <- apply(toten[3:32], MARGIN=2, FUN='as.numeric(as.character)') # This fails\n# summary(as.character(toten$X.1))\n# head(as.character(toten$X.1))\n# summary(as.numeric(as.character(toten$X.1))) # not working\n# levels(as.factor(toten$X.1))\n\nfor(i in 3:ncol(toten)){\n  toten[,i] <- as.numeric(gsub(\",\", \"\", as.character(toten[,i])))\n}\n\ntoten[which(grepl(\"Birming\", toten$ZONE_LABEL)),] # test - previous command broke it\nsummary(toten[1:5])\ndiss$toten <- toten$X.25 # energy use in GWh/yr\nsummary(toten[32] / toten$X.25)\ndiss$ttrans <- toten[,32]\ntoten[which(grepl(\"Birming\", toten$ZONE_LABEL)),]\ntoten[which(grepl(\"Birming\", toten$ZONE_LABEL)),32] # All transport\ntoten[which(grepl(\"Birming\", toten$ZONE_LABEL)),14:18] # All transport\ndiss$rtrans <- toten[,14]\n\nplot(diss$ET, diss$rtrans)\ncor.test(diss$ETyr.tot, diss$rtrans)\ncor.test(diss$ETyr.tot, diss$ttrans)\ncor.test(diss$ETyr.tot, diss$toten)\ncor(diss@data[,c(303:ncol(diss@data))], use=\"complete.obs\")\ncor(diss$ET, diss$ETyr.tot)\nnames(diss)\n\nsummary((diss$ETyr.tot/3.6) / (diss$toten * 1000000) )\nsummary((diss$ETyr.tot/3.6) / (diss$ttrans * 1000000) )\n\ndiss$prop.energy <- ((diss$ETyr.tot/3.6) / (diss$toten * 1000000) )\ndiss$prop.trans.en <- ((diss$ETyr.tot/3.6) / (diss$ttrans * 1000000) )\n\nla <- fortify(diss, region=\"id\")\nla <- join(la, diss@data, by=\"id\", match=\"first\")\nhead(la)\n\nobject.size(la)/1000000\nnames(la) # 33 Mb for 400 tol\np <- ggplot(data=la, aes( x=long/1000, y=lat/1000))\np + geom_polygon(data=la,aes(x=long/1000, y=lat/1000, fill=prop.trans.en * 100, group=group)) + \n  scale_fill_continuous(low=\"green\", high=\"red\", name=\"Proportion\\nof transport\\nenergy use (%)\") + coord_fixed() +\n  xlab(\"Easting (km)\") + ylab(\"Northing (km)\") + \n  geom_path(data=fgor, aes(x=long/1000, y=lat/1000, group=group)) + theme_classic()\n\n ggsave(\"~/Dropbox/Thesis/Figures/prop-trans-energy.png\", width=8, height = 8)\n\np <- ggplot(data=la, aes( x=long/1000, y=lat/1000))\np + geom_polygon(data=la,aes(x=long/1000, y=lat/1000, fill=prop.energy * 100, group=group)) + \n  scale_fill_continuous(low=\"green\", high=\"red\", name=\"Proportion\\nof total\\nenergy use (%)\") + coord_fixed() +\n  xlab(\"Easting (km)\") + ylab(\"Northing (km)\") + \n  geom_path(data=fgor, aes(x=long/1000, y=lat/1000, group=group)) + theme_classic()\n\nggsave(\"~/Dropbox/Thesis/Figures/prop-total-energy.png\", width=8, height = 8)\n\nsum(diss$ETyr.tot) / 1000000000 # MJ, GJ, TJ, PJ, EJ\nsum(diss$ETyr.tot) / (1000000000 * 3.6) # TWh\nsum(diss$ETyr.tot/3.6) / sum(diss$toten * 1000000, na.rm=T)\nsum(diss$ETyr.tot/3.6) / sum(diss$ttrans * 1000000, na.rm=T)\n\nreg.e.use <- c(83470.9,\n215321.6,\n181226.6,\n136224.7,\n155993.4,\n167920.4,\n175749.0,\n246220.2,\n135247.6)\nsum(diss$ETyr.tot/3.6) / sum(reg.e.use * 1000000, na.rm=T)\nwhich(is.na(diss$ttrans))\nnrow(diss)\n\ndiss@data[which(diss$prop.energy > 0.09),c(\"ZONE_LABEL\", \"prop.energy\")]\ndiss@data[which(diss$prop.energy < 0.01),c(\"ZONE_LABEL\", \"prop.energy\")]\n\n### Comparisons with CO2 data\n\nhead(diss@data[,1:10])\nco2la <- read.csv(\"co2-ems-la.csv\")\nhead(co2la[,1:5])\nexample(rename)\nco2la <- rename(co2la, c(\"LAD10CD\" = \"ZONE_CODE\"))\nsummary(co2la$ZONE_CODE)\nsummary(diss$ZONE_CODE)\nco2la <- join(diss@data[,1:3], co2la)\nnrow(co2la) ; nrow(diss@data)\nhead(co2la)\n\nplot(co2la$Transport.Total, diss$ET)\ncor.test(co2la$Transport.Total, diss$ET)\n\ncor(diss$ET, co2la$B..Industry.and.Commercial.Gas,  use= \"complete.obs\")\ncor(diss$ET, co2la$I..Road.Transport..A.roads.,  use= \"complete.obs\")\ncorme <- data.frame(ET = diss$ET, EAV = diss$car.all, Aroads = co2la$I..Road.Transport..A.roads.,\n                    Mways = co2la$J..Road.Transport..Motorways., minor.roads = co2la$K..Road.Transport..Minor.roads., \n                    Trans.total = co2la$Transport.Total)\nsummary(co2la$)\nround(cor(corme, use=\"complete.obs\"), digits=2)\nwrite.csv(round(cor(corme, use=\"complete.obs\"), digits=2), \"~/Dropbox/Thesis/Tables/co2-cors.csv\")\n\n# accounting for pops\nplot(co2la$Transport.Total/diss$all.all, diss$EAV)\ncor.test(co2la$Transport.Total/diss$all.all, diss$EAV)\n\nplot(co2la$Per.Capita.Emissions..t., diss$EAV)\ncor.test(co2la$Per.Capita.Emissions..t., diss$EAV)\n\n\n\nla <- fortify(diss, region=\"id\")\nla <- join(la, diss@data, by=\"id\", match=\"first\")\nhead(la)\n\nobject.size(la)/1000000\nnames(la) # 33 Mb for 400 tol\np <- ggplot(data=la, aes( x=long/1000, y=lat/1000))\np + geom_polygon(data=la,aes(x=long/1000, y=lat/1000, fill=ET/all.all, group=group)) + \n  scale_fill_continuous(low=\"green\", high=\"red\", name=\"Etrp (MJ)\") + coord_fixed() +\n  xlab(\"Easting (km)\") + ylab(\"Northing (km)\") + \n  geom_path(data=fgor, aes(x=long/1000, y=lat/1000, group=group)) + theme_classic()\n\n# ggsave(\"~/Dropbox/Thesis/Figures/districten.png\", width=8, height = 8)\ndiss@data[diss$EAV <25,c(\"ZONE_LABEL\", \"EAV\")]\ndiss@data[diss$EAV >54,c(\"ZONE_LABEL\", \"EAV\")]\nsd(diss@data$EAV)\nsd(gors@data$ET/gors$all.all)\n\nogrDrivers()\nwriteOGR(wards, dsn=\".\", layer=\"wardens\", driver=\"ESRI Shapefile\")\nwriteOGR(diss, dsn=\".\", layer=\"districtens\", driver=\"ESRI Shapefile\")\n\n",
    "created" : 1374933848283.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1321869170",
    "id" : "D882ADA4",
    "lastKnownWriteTime" : 1379087872,
    "path" : "~/Dropbox/Thesis/Reproducible/esubnat/districten-yr.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}