{
    "contents" : "### English counties map, based on existing 'esubnat' project\ncounties <- readOGR(\"/home/robin/Data/Nationaltravel/eng-counties/\", \"output\")\nlass <- readOGR(\"/home/robin/Data/Nationaltravel/dislas/\", \"dismode_la_eng\")\nrow.names(lass) <- as.character(42:(nrow(lass@data)+41))\nc <- spRbind(lass, counties)\nobject.sizes()\nc <- SpatialPolygonsDataFrame(gSimplify(c, tol=500), data=c@data)\nobject.sizes()\nplot(c)\n\nrm(counties, lass)\n# cs <- sample(1:nrow(lass), size=nrow(c), replace=T) # delme\n# c@data[,3:102] <- read.dbf(\"/home/robin/Data/Nationaltravel/dislas/dismode_la_eng.dbf\")[cs,3:102] # delme\n\nc@data$mfh <- c@data$ST1210002 #\nc@data <- c@data[,-4] # remove the original mainly working from home column: gets in the way\nnames(c@data)[3:101] <- newnames\n\necs <- sweep(x=c@data[,3:101], MARGIN=2, edcosts, '*' ) \nnames(ecs) <- paste(\"moden\",names(ecs), sep=\".\")\nc@data <- cbind(c@data, ecs)\nc@data$ET <- rowSums(ecs)\nc@data$EAV <- c$ET / c$all.all\nc$abbed <- abbreviate(c$ZONE_LABEL, minlength=2, strict=T) # create abbreviated area names\nc$id <- 1:nrow(c@data)\n\nla <- fortify(c, region=\"id\")\nla <- join(la, c@data, by=\"id\", match=\"first\")\n\n# making text boxes\nct <- data.frame(coordinates(c), \n                 text = c$abbed)\n\np <- ggplot(data=la, aes( x=long/1000, y=lat/1000))\np + geom_polygon(data=la,aes(x=long/1000, y=lat/1000, fill=ET/all.all, group=group)) + \n  scale_fill_continuous(low=\"green\", high=\"red\", name=\"Etrp (MJ)\") + coord_fixed() +\n  xlab(\"Easting (km)\") + ylab(\"Northing (km)\") + \n  geom_text(data=ct, aes(x=X1/1000, y=X2/1000, label=text), size= I(3), family=\"mono\") +\n  geom_path(data=fgor, aes(x=long/1000, y=lat/1000, group=group)) + theme_classic()\nggsave(\"~/Dropbox/Thesis/Figures/countyen.png\", width=8, height=8)\n\n### Analysis\nc@data[c$EAV < 25,c(\"ZONE_LABEL\", \"EAV\")]\nc@data[c$EAV > 45,c(\"ZONE_LABEL\", \"EAV\")]\nmean(c$EAV)\nc$EAV[grepl(\"Kent|Essex|Bedf\", x=c$ZONE_LABEL)]\nmean(c$EAV[grepl(\"Kent|Essex|Bedf\", x=c$ZONE_LABEL)])\n??distance\ngDistance(spgeom1=c[grepl(\"Rutl\", x=c$ZONE_LABEL),], spgeom2=c[grepl(\"Inner\", x=c$ZONE_LABEL),])\n\n",
    "created" : 1375032114257.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4132854045",
    "id" : "E4B8EA22",
    "lastKnownWriteTime" : 1375098009,
    "path" : "~/Dropbox/Thesis/Reproducible/esubnat/counties.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}