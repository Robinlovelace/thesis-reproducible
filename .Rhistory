ggplot
getwd()
x <- seq(0,20,by=0.1)
walk <- 0.486*exp(x)
plot(x,walk)
walk <- 0.486*exp(1.683*x)
plot(x,walk)
walk <- 0.486*exp(-1.683*x)
plot(x,walk)
cycle <- 0.402*exp(-0.203*x)
plot(x,walk)
x <- seq(0,10,by=0.1)
walk <- 0.486*exp(-1.683*x)
cycle <- 0.402*exp(-0.203*x)
plot(x,walk)
lines(x,cycle)
cycle.shopping <- 0.343*exp(-0.514x)
cycle.shopping <- 0.343*exp(-0.514*x)
df <- data.frame(x,walk,cycle,cycle.shopping)
df
dm <- melt(df)
head(dm)
dm <- melt(df, id.vars=x)
head(dm)
dm <- melt(df, id.vars="x")
head(dm)
qplot(dm, x=x, y=value, colour=variable)
head(dm)
qplot(dm, x=x, y=value)
qplot(data=dm, x=x, y=value)
qplot(data=dm, x=x, y=value, colour=variable)
qplot(data=dm, x=x, y=value, colour=variable, geom="line")
qplot(data=dm, x=x, y=value, colour=variable, geom="line") +
geom_text("hola")
qplot(data=dm, x=x, y=value, colour=variable, geom="line") +
geom_text("hola", aes(x=5, y=0.2))
qplot(data=dm, x=x, y=value, colour=variable, geom="line") +
geom_text(data="hola", aes(x=5, y=0.2))
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic()
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete("Impedance")
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(title="Impedance")
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(name="Impedance")
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(name="Impedance") + opts(legend.position = "top")
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(name="Impedance") + opts(legend.position = c(0.8,0.9))
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(name="Impedance") + opts(legend.position = c(0.6,0.7))
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(name="Impedance") + opts(legend.position = c(0.6,0.8))
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(name="Impedance") + opts(legend.position = c(0.6,0.8))
geom_text(data="hola", aes(x=5, y=0.2)) + xlab("Distance (km)") + ylab("% travel")
ggsave("impedance.png",width=4.5, height=3)
getwd()
qplot(data=dm, x=x, y=value, colour=variable, geom="line") + theme_classic() +
scale_color_discrete(name="Impedance") + opts(legend.position = c(0.6,0.8)) +
xlab("Distance (km)") + ylab("% travel")
ggsave("impedance.png",width=4.5, height=3)
ggsave("impedance.png",width=5, height=3)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
ggplot2
library(ggplot2)
install.packages("ggplot2")
install.packages('knitr', repos='http://cran.r-project.org',
type='source')
ggplot
ggplot2
update.packages(checkBuilt = TRUE, ask = FALSE)
remove.packages(ggplot2)
library(rgeos)
source("geopackages.R")
ggplot2
ggplot()
library(ggplot2)
installed.packages("~/R/devlibs/")[, "Built", drop = FALSE]
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2", contriburl='http://cran.ma.imperial.ac.uk/')
install.packages("programs/ggplot2_0.9.3.1.tar.gz", repos = NULL, type="source")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
installed.packages()
update.packages()
library(rgeos)
library(rgdal)
library(ggplot2)
install.packages("ggplot2")
library(digest)
remove.packages(digest)
remove.packages("digest")
?startup
?Startup
.libPaths()
install.packages("devtools")
update.packages()
> install.packages("stingr")
install.packages("stingr")
install.packages("stingr")
install.packages("ggplot2")
install.packages("digest")
install.packages("ggplot2")
install.packages("gtable")
install.packages("ggplot2")
install.packages("plyr")
install.packages("ggplot2")
install.packages("reshape2")
update.packages(ask=FALSE, checkBuilt=TRUE)
library(ggplot2)
install.packages("reshape2")
install.packages("ggplot2")
ggplot2
qplot(1:17, exp(1:17))
library(qplot)
library(ggplot)
library(ggplot2)
qplot(1:17, exp(1:17))
library(plyr)
available.packages()
available.packages(filters="gg")
installed.packages()
install.packages("ggthemes")
?ggthemes
??ggthemes
(0.3272-0.3087)/(0.334-0.3087)
install.packages("osmar")
osmar
library(osmar)
src <- osmsource_api()
bb <- center_bbox(center_lon=1.5, 53.4)
bb <- center_bbox(center_lon=1.5, 53.4, 10000, 10000)
shef <- get_osm(x=bb, source=src)
shef
bb <- center_bbox(center_lon=-1.5, 53.4, 10000, 10000)
shef <- get_osm(x=bb, source=src)
shef
shef
shef <- get_osm(x=bb, source=src)
shef
bb <- center_bbox(center_lon=-1.59, 53.47, 1000, 1000)
shef <- get_osm(x=bb, source=)
shef
summary(shef$nodes)
plot(shef)
plot(shef$nodes)
plot_nodes(shef)
plot_ways(shef)
shef
?osm::plot
?osmar::plot
?osmar
bb
bb[1,1]
bb[1]
bb[1,3]
bb[c(1,2)]
bb[c(1,3)]
plot_ways(shef, xlim=bb[c(1,3)], ylim=bb[c(2,4)])
bb[c(1,3)]
plot(shef, xlim=bb[c(1,3)], ylim=bb[c(2,4)])
?plot.osmar
bg_ids <- find(shef, way(tags(k == "building")))
bg_ids
bg_ids <- find_down(shef, way(bg_ids))
bg_ids
bg <- subset(shef, ids == bg_ids)
bg <- subset(shef, ids = bg_ids)
bg
bg_ids <- find(shef, way(tags(k == "building")))
bg_ids
shef
summary(shef$nodes)
sh_lines <- as_sp(shef, "lines")
plot(sh_lines)
plot(sh_lines, xlim=bb[c(1,3)], ylim=bb[c(2,4)])
ggplot2()
?ggplot2
news(Version == "0.9.3.1", package = "ggplot2")
install.packages("sos")
library(sos)
?simplify
??simplify
findFn("simplify")
findFn("simplify geometary")
findFn("simplify geomtry")
findFn("simplify geometry")
setwd("~/Dropbox/Thesis/Reproducible")
crf <- read.csv("Carreffs.csv")
head(crf)
mean(crf$L.100.km.Urban..Cold.) / mean(crf$L.100.km.Extra.Urban)
cbind(crf,(crf$L.100.km.Urban..Cold.) / (crf$L.100.km.Extra.Urban))
# crf <- crf[,c(1,2,3,5,7,8)]
crf$Urban <- crf$L.100.km.Urban..Cold.
crf$Extra.urban <- crf$L.100.km.Extra.Urban
attach(crf)
crf$Type <- paste(Model, Description)
crf$Make <- Model
class(L.100.km.Combined)
crfm <- melt(crf, id.vars=c("Model", "Description", "Engine.Capacity"),
measure.vars = c("Urban", "Extra.urban"), value.name= "L.100km",
variable.name = "Cycle")
head(crfm)
qplot(data=crfm, x=Engine.Capacity, y=L.100km, shape = Cycle, colour= Model) +
geom_point(size=3) +
geom_text(data=crfm[which(crfm$Cycle=="Extra.urban"),], aes(y = Extra.urban * 1.3,
label=Description), colour="black",
angle = 90, alpha=0.5) + ylab("Energy use (l/100 km)")+ xlab("Engine size (cubic cm)")
qplot(data=crfm, x=Engine.Capacity, y=L.100km, shape = Cycle, colour= Make) +
geom_point(size=3) +
geom_text(data=crfm[which(crfm$Cycle=="Extra.urban"),], aes(y = Extra.urban * 1.3,
label=Description), colour="black",
angle = 90, alpha=0.5) + ylab("Energy use (l/100 km)")+ xlab("Engine size (cubic cm)")
crfm <- melt(crf, id.vars=c("Make", "Description", "Engine.Capacity"),
measure.vars = c("Urban", "Extra.urban"), value.name= "L.100km",
variable.name = "Cycle")
head(crfm)
qplot(data=crfm, x=Engine.Capacity, y=L.100km, shape = Cycle, colour= Make) +
geom_point(size=3) +
geom_text(data=crfm[which(crfm$Cycle=="Extra.urban"),], aes(y = Extra.urban * 1.3,
label=Description), colour="black",
angle = 90, alpha=0.5) + ylab("Energy use (l/100 km)")+ xlab("Engine size (cubic cm)")
ggsave("carplot-urb.png", width=6)
